<templateSet group="HFE Angular Templates">
  <template name="@hngcontroller" value="(function (){&#10;    &quot;use strict&quot;;&#10;    angular.module('$moduleName$')&#10;        .controller('$controllerName$Controller', $controllerName$Controller);&#10;    &#10;    $controllerName$Controller.$inject = [];&#10;    &#10;    function $controllerName$Controller(){&#10;        var vm = this;&#10;        &#10;        $END$&#10;    }    &#10;})();" description="Add a controller to a module wrapped in an IIFE" toReformat="true" toShortenFQNames="true">
    <variable name="moduleName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="controllerName" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="@hngservice" value="(function (){&#10;    &quot;use strict&quot;;&#10;    angular.module('$moduleName$')&#10;        .service('$serviceName$Service', $serviceName$Service);&#10;    &#10;    $serviceName$Service.$inject = ['$q', 'hngLocalService'];&#10;    &#10;    function $serviceName$Service($q, hngLocalService){&#10;        var service = this;&#10;        var userProxy = hngLocalService.createModelProxy('$serviceName$');&#10;        var methods = ['create', 'update', 'delete', 'get', 'query', 'all'];&#10;&#10;        angular.forEach(methods, function(method){&#10;            service[method] = function() {&#10;                return userProxy[method].apply(userProxy, arguments);&#10;            }&#10;        });&#10;    }&#10;})();" description="" toReformat="true" toShortenFQNames="true">
    <variable name="moduleName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="serviceName" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="@hngroute" value="(function () {&#10;    &quot;use strict&quot;;&#10;    angular.module('$moduleName$')&#10;        .config(routeConfig);&#10;&#10;    routeConfig.$inject = ['$stateProvider'];&#10;&#10;    function routeConfig($stateProvider) {&#10;        var $stateName$ = {&#10;            name: '$stateName$',&#10;            abstract: true,&#10;            url: '$url$',&#10;            data: {title: '$title$'},&#10;            template: '&lt;ui-view /&gt;'&#10;        }, $stateName$List = {&#10;            name: '$stateName$.list',&#10;            parent: user,&#10;            url: '',&#10;            data: {title: '列表'},&#10;            templateUrl: 'modules/$stateName$/list.html',&#10;            controller: '$controllerName$',&#10;            controllerAs: 'vm'&#10;        };&#10;&#10;        $stateProvider&#10;            .state($stateName$)&#10;            .state($stateName$List);&#10;    }&#10;})();" toReformat="true" toShortenFQNames="true">
    <variable name="moduleName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="stateName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="url" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="title" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="controllerName" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>